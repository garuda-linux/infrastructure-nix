---
version: "3.9"
services:
  chaotic-builder:
    image: registry.gitlab.com/garuda-linux/tools/chaotic-manager/manager:latest
    container_name: chaotic-builder
    command: builder
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-?err}
      REDIS_SSH_HOST: host.docker.internal
      REDIS_SSH_USER: package-deployer
      SHARED_PATH: /var/garuda/docker-compose-runner/chaotic-v4/shared
      # Override the default database host
      DATABASE_HOST: host.docker.internal
      DATABASE_PORT: 22
    volumes:
      - ./shared:/shared
      - ./sshkey:/app/sshkey
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"
  chaotic-manager:
    image: registry.gitlab.com/garuda-linux/tools/chaotic-manager/manager:latest
    container_name: chaotic-manager
    command: database --web-port 8080
    environment:
      # Address published to outside world
      DATABASE_HOST: builds.garudalinux.org
      DATABASE_PORT: 400
      DATABASE_USER: package-deployer
      GPG_PATH: /var/garuda/docker-compose-runner/chaotic-v4/gnupg
      LANDING_ZONE_PATH: /var/garuda/docker-compose-runner/chaotic-v4/landing-zone
      REDIS_PASSWORD: ${REDIS_PASSWORD:-?err}
      REDIS_SSH_HOST: host.docker.internal
      REDIS_SSH_USER: package-deployer
      REPO_PATH: /srv/http/repos
      LOGS_URL: https://builds.garudalinux.org/logs/logs.html
      PACKAGE_REPOS_NOTIFIERS: >-
        {"chaotic-aur":{"id":"52092196","token":"${GITLAB_TOKEN:-?err}","check_name":"chaotic: %pkgbase%"},
        {"garuda":{"id":"48461689","token":"${GITLAB_TOKEN:-?err}","check_name":"garuda: %pkgbase%"}}
    volumes:
      - ./sshkey:/app/sshkey
      - /var/run/docker.sock:/var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports: [8080:8080]
  # Automated container updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    command:
      --cleanup chaotic-builder chaotic-manager watchtower --interval 3600
    volumes: [/var/run/docker.sock:/var/run/docker.sock]
    restart: always
