services:
  # Reddit frontend
  libreddit:
    image: libreddit/libreddit:latest
    container_name: libreddit
    environment:
      LIBREDDIT_DEFAULT_AUTOPLAY_VIDEOS: "true"
      LIBREDDIT_DEFAULT_FRONT_PAGE: popular
      LIBREDDIT_DEFAULT_SHOW_NSFW: True
      LIBREDDIT_DEFAULT_THEME: dracula
      LIBREDDIT_DEFAULT_USE_HLS: True
    ports:
      - "127.0.0.1:8083:8080"
    restart: always

  # Whoogle search engine
  whoogle:
    image: benbusby/whoogle-search:latest
    container_name: whoogle
    user: whoogle
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - /var/lib/tor/:size=10M,uid=927,gid=927,mode=1700
      - /run/tor/:size=1M,uid=927,gid=927,mode=1700
    volumes:
      - "./whoogle:/config"
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      WHOOGLE_ALT_RD: reddit.dr460nf1r3.org
      WHOOGLE_ALT_TL: translate.dr460nf1r3.org
      WHOOGLE_ALT_TW: twitter.dr460nf1r3.org
      WHOOGLE_ALT_YT: piped.garudalinux.org
      WHOOGLE_AUTOCOMPLETE: 1
      WHOOGLE_CONFIG_LANGUAGE: lang_en
      WHOOGLE_CONFIG_NEW_TAB: 1
      WHOOGLE_CONFIG_SEARCH_LANGUAGE: lang_en
      WHOOGLE_CONFIG_STYLE: ":root{--whoogle-logo:#c4a7e7;--whoogle-page-bg:#faf4ed;--whoogle-element-bg:#f2e9e1;--whoogle-text:#575279;--whoogle-contrast-text:#1f1d2e;--whoogle-secondary-text:#797593;--whoogle-result-bg:#faf4ed;--whoogle-result-title:#d7827e;--whoogle-result-url:#286983;--whoogle-result-visited:#907aa9;--whoogle-dark-logo:#c4a7e7;--whoogle-dark-page-bg:#191724;--whoogle-dark-element-bg:#1f1d2e;--whoogle-dark-text:#e0def4;--whoogle-dark-contrast-text:#e0def4;--whoogle-dark-secondary-text:#908caa;--whoogle-dark-result-bg:#393552;--whoogle-dark-result-title:#9ccfd8;--whoogle-dark-result-url:#3e8fb0;--whoogle-dark-result-visited:#c4a7e7}#whoogle-w{fill:#eb6f92}#whoogle-h{fill:#f6c177}#whoogle-o-1{fill:#ebbcba}#whoogle-o-2{fill:#31748f}#whoogle-g{fill:#9ccfd8}#whoogle-l{fill:#c4a7e7}#whoogle-e{fill:#908caa}"
      WHOOGLE_CONFIG_THEME: dark
      WHOOGLE_CONFIG_URL: https://search.dr460nf1r3.org
      WHOOGLE_CONFIG_VIEW_IMAGE: 1
      WHOOGLE_RESULTS_PER_PAGE: 30
    pids_limit: 100
    restart: always

  # Lingva
  lingva:
    image: thedaviddelta/lingva-translate:latest
    container_name: lingva
    environment:
      DARK_THEME: "true"
      DEFAULT_SOURCE_LANG: auto
      DEFAULT_TARGET_LANG: en
      SITE_DOMAIN: lingva.garudalinux.org
    ports:
      - "127.0.0.1:3000:3000"
    restart: always

  # Teddit
  teddit:
    image: teddit/teddit:latest
    container_name: teddit
    depends_on:
      - teddit_redis
    environment:
      DOMAIN: teddit.garudalinux.org
      REDIS_HOST: teddit_redis
      THEME: dark
      TRUST_PROXY: "true"
    ports:
      - "127.0.0.1:8081:8080"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://127.0.0.1:8081/about"
        ]
      interval: 1m
      timeout: 3s
    restart: always

  teddit_redis:
    image: redis:6.2.5-alpine
    container_name: teddit_redis
    command: redis-server
    environment:
      REDIS_REPLICATION_MODE: master
    restart: always

  # Invious YouTube frontend
  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    depends_on:
      - invidious_db
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: ${INVIDIOUS_DB_PASSWORD:?err}
          host: invidious_db
          port: 5432
        check_tables: true
        default_user_preferences:
          local: true
          quality: dash
        admins: ["nico"]
        captcha_key: ${INVIDIOUS_CAPTCHA_KEY:?err}
        disable_proxy: ["livestreams","downloads"]
        domain: invidious.garudalinux.org
        external_port: 443
        hmac_key: ${INVIDIOUS_HMAC_KEY:?err}
        https_only: true
        popular_enabled: true
        statistics_enabled: true
        use_pubsub_feeds: true
        use_quic: true
    ports:
      - "127.0.0.1:3001:3000"
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3001/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    restart: always

  invidious_db:
    image: docker.io/library/postgres:14
    container_name: invidious_db
    volumes:
      - ./invidious/db:/var/lib/postgresql/data
      - ./invidious/config:/config/sql
      - ./invidious/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: "${INVIDIOUS_DB_PASSWORD:?err}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
        ]
    restart: always

  # Piped
  piped_backend:
    image: 1337kavin/piped:latest
    container_name: piped_backend
    depends_on:
      - piped_postgres
    volumes:
      - ./piped/config.properties:/app/config.properties:ro
    restart: always

  piped_frontend:
    image: 1337kavin/piped-frontend:latest
    container_name: piped_frontend
    entrypoint: ash -c 'sed -i s/pipedapi.kavin.rocks/piped-api.garudalinux.org/g /usr/share/nginx/html/assets/* && /docker-entrypoint.sh && nginx -g "daemon off;"'
    depends_on:
      - piped_backend
    restart: always

  piped_nginx:
    image: nginx:mainline-alpine
    container_name: piped_nginx
    depends_on:
      - piped_backend
      - piped_frontend
      - piped_proxy
    volumes:
      - ./piped/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./piped/config/pipedapi.conf:/etc/nginx/conf.d/pipedapi.conf:ro
      - ./piped/config/pipedfrontend.conf:/etc/nginx/conf.d/pipedfrontend.conf:ro
      - ./piped/config/pipedproxy.conf:/etc/nginx/conf.d/pipedproxy.conf:ro
      - ./piped/config/ytproxy.conf:/etc/nginx/snippets/ytproxy.conf:ro
      - piped_proxy:/var/run/ytproxy
    ports:
      - "127.0.0.1:8082:80"
    restart: always

  piped_postgres:
    image: postgres:13-alpine
    container_name: piped_postgres
    volumes:
      - ./piped/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: piped
      POSTGRES_PASSWORD: "${INVIDIOUS_DB_PASSWORD:?err}"
      POSTGRES_USER: piped
    restart: always

  piped_proxy:
    image: 1337kavin/piped-proxy:latest
    container_name: piped_proxy
    environment:
      - UDS=1
    volumes:
      - piped_proxy:/app/socket
    restart: always

  # Automatic container updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: true
    command: invidious libreddit piped_backend piped_frontend piped_proxy piped_nginx teddit lingva

volumes:
  piped_proxy: null
