version: "3.9"
services:
  # Garuda Cloud
  nextcloud_app:
    image: linuxserver/nextcloud:latest
    container_name: nextcloud
    depends_on:
      - nextcloud_db
      - nextcloud_redis
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Berlin
    ports:
      - 443:443
    volumes:
      - "./nextcloud/config:/config"
      - "./nextcloud/data:/data"
    restart: always

  nextcloud_db:
    image: mariadb:latest
    container_name: nextcloud_db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      MYSQL_ROOT_PASSWORD: ${NC_ROOT_PASSWORD:-?err}
      MYSQL_PASSWORD: ${NC_PASSWORD:-?err}
      MYSQL_DATABASE: ${NC_DATABASE:-?err}
      MYSQL_USER: ${NC_USER:-?err}
    volumes:
      - "./nextcloud/db:/var/lib/mysql"
    restart: always

  nextcloud_redis:
    image: redis:latest
    container_name: nextcloud_redis
    environment:
      ALLOW_EMPTY_PASSWORD: True
    restart: always

  whoogle:
    image: benbusby/whoogle-search:latest
    container_name: whoogle
    user: whoogle
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - "/var/lib/tor/:size=10M,uid=927,gid=927,mode=1700"
      - "/run/tor/:size=1M,uid=927,gid=927,mode=1700"
    volumes:
      - "./whoogle:/config"
    ports:
      - 5000:5000
    environment:
      WHOOGLE_AUTOCOMPLETE: 1
      WHOOGLE_CONFIG_LANGUAGE: lang_en
      WHOOGLE_CONFIG_NEW_TAB: 1
      WHOOGLE_CONFIG_SEARCH_LANGUAGE: lang_en
      WHOOGLE_CONFIG_STYLE: ":root{--whoogle-logo:#c4a7e7;--whoogle-page-bg:#faf4ed;--whoogle-element-bg:#f2e9e1;--whoogle-text:#575279;--whoogle-contrast-text:#1f1d2e;--whoogle-secondary-text:#797593;--whoogle-result-bg:#faf4ed;--whoogle-result-title:#d7827e;--whoogle-result-url:#286983;--whoogle-result-visited:#907aa9;--whoogle-dark-logo:#c4a7e7;--whoogle-dark-page-bg:#191724;--whoogle-dark-element-bg:#1f1d2e;--whoogle-dark-text:#e0def4;--whoogle-dark-contrast-text:#e0def4;--whoogle-dark-secondary-text:#908caa;--whoogle-dark-result-bg:#393552;--whoogle-dark-result-title:#9ccfd8;--whoogle-dark-result-url:#3e8fb0;--whoogle-dark-result-visited:#c4a7e7}#whoogle-w{fill:#eb6f92}#whoogle-h{fill:#f6c177}#whoogle-o-1{fill:#ebbcba}#whoogle-o-2{fill:#31748f}#whoogle-g{fill:#9ccfd8}#whoogle-l{fill:#c4a7e7}#whoogle-e{fill:#908caa}"
      WHOOGLE_CONFIG_THEME: dark
      WHOOGLE_CONFIG_URL: https://search.garudalinux.org
      WHOOGLE_CONFIG_VIEW_IMAGE: 1
      WHOOGLE_RESULTS_PER_PAGE: 15
    pids_limit: 50
    restart: always

  # Searxng search engine
  searx:
    image: searxng/searxng:latest
    container_name: searx
    depends_on:
      - filtron
      - morty
    volumes:
      - "./searxng:/etc/searxng"
    ports:
      - 8080:8080
    environment:
      BIND_ADDRESS: 0.0.0.0:8080
      BASE_URL: https://searx.garudalinux.org/
      MORTY_URL: https://searx.garudalinux.org/morty/
      MORTY_KEY: ${SX_MORTY_KEY:-?err}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    restart: always

  morty:
    image: dalf/morty:latest
    container_name: morty
    ports:
      - 3000:3000
    command: -timeout 6 -ipv6
    environment:
      MORTY_KEY: ${SX_MORTY_KEY:-?err}
      MORTY_ADDRESS: 0.0.0.0:3000
    logging:
      driver: none
    read_only: true
    cap_drop:
      - ALL
    restart: always

  filtron:
    image: dalf/filtron:latest
    container_name: filtron
    ports:
      - 4040:4040
      - 4041:4041
    command: -listen 0.0.0.0:4040 -api 0.0.0.0:4041 -target searxng:8080
    volumes:
      - "./searxng/rules.json:/etc/filtron/rules.json:rw"
    read_only: true
    cap_drop:
      - ALL
    restart: always

  # Firefox syncserver
  syncserver:
    container_name: syncserver
    image: crazymax/firefox-syncserver:latest
    volumes:
      - "./syncserver:/data"
    ports:
      - 5001:5000
    environment:
      FF_SYNCSERVER_ACCESSLOG: True
      FF_SYNCSERVER_FORCE_WSGI_ENVIRON: True
      FF_SYNCSERVER_FORWARDED_ALLOW_IPS: "*"
      FF_SYNCSERVER_PUBLIC_URL: https://ffsync.garudalinux.org
      FF_SYNCSERVER_SECRET: ${FF_SYNCSERVER_SECRET:-?err}
      FF_SYNCSERVER_SQLURI: sqlite:////data/syncserver.db
      TZ: Europe/Berlin
    restart: always

  # Web IRC access
  thelounge:
    image: thelounge/thelounge:latest
    container_name: thelounge
    volumes:
      - "./thelounge:/var/opt/thelounge"
    ports:
      - 9000:9000
    restart: always

  # Password vault
  bitwarden:
    image: vaultwarden/server:testing
    container_name: bitwarden
    volumes:
      - "./bitwarden:/data"
    ports:
      - 8081:80
    environment:
      ADMIN_TOKEN: ${BW_ADMIN_TOKEN:-?err}
      DOMAIN: https://bitwarden.garudalinux.org
      SIGNUPS_ALLOWED: True
      SMTP_FROM: noreply@garudalinux.org
      SMTP_HOST: mail.garudalinux.org
      SMTP_PASSWORD: ${BW_SMTP_PASSWORD:-?err}
      SMTP_PORT: 587
      SMTP_SSL: False
      SMTP_USERNAME: noreply@garudalinux.org
      WEBSOCKET_ENABLED: True
      YUBICO_CLIENT_ID: ${BW_YUBICO_CLIENT_ID:-?err}
      YUBICO_SECRET_KEY: ${BW_YUBICO_ADMIN_SECRET:-?err}
    restart: always

  # Secure pastebin
  privatebin:
    image: privatebin/nginx-fpm-alpine:latest
    container_name: privatebin
    volumes:
      - "./privatebin:/srv/data"
      - "./configs/privatebin.cfg.php:/srv/cfg/conf.php"
    ports:
      - 8082:8080
    restart: always

  # Garuda startpage
  homer:
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - "./startpage:/www/assets"
    ports:
      - 8083:8080
    restart: always

  # MongoDB instance
  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - "./mongo:/data/db"
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-?err}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-?err}
    restart: always

  wikijs_app:
    image: requarks/wiki:latest
    container_name: wikijs_app
    volumes:
      - "./wikijs/assets:/wiki/assets/favicons"
    ports:
      - 3001:3000
    environment:
      DB_TYPE: postgres
      DB_HOST: 172.17.0.1
      DB_PORT: 5432
      DB_USER: wikijs
      DB_PASS: ${WIKIJS_DB_PASS:-?err}
      DB_NAME: wikijs
    restart: always

  # Matrix homeserver
  matrix:
    image: matrixdotorg/synapse:latest
    container_name: matrix
    volumes:
      - "./matrix/matrix:/data"
    ports:
      - 8008:8008
    restart: always

  mautrix-telegram:
    image: dock.mau.dev/mautrix/telegram
    container_name: mautrix-telegram
    volumes:
      - "./matrix/mautrix-telegram:/data"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "! (grep -q 'System clock is wrong, set time offset to' /tmp/debug.log && rm /tmp/debug.log && kill -SIGINT 1)"]
      interval: 1m
      timeout: 10s

  matrix-appservice-discord:
    image: ghcr.io/matrix-org/matrix-appservice-discord:develop
    container_name: matrix-appservice-discord
    volumes:
      - "./matrix/matrix-appservice-discord:/data"
    restart: always

  # Matrix web client
  matrix_web:
    image: vectorim/element-web
    container_name: element_web
    depends_on:
      - matrix
    volumes:
      - "./matrix/element/config.json:/app/config.json"
    ports:
      - 8084:80
    restart: always

  # Admin interface for Matrix
  matrix_admin:
    image: awesometechnologies/synapse-admin:latest
    container_name: matrix_admin
    depends_on:
      - matrix
    ports:
      - 8085:80
    restart: always

  # Matrix to IRC/Discord/Telegram relay
  matterbridge:
    image: 42wim/matterbridge:stable
    container_name: matterbridge
    depends_on:
      - matrix
    volumes:
      - "./matterbridge/matterbridge.toml:/etc/matterbridge/matterbridge.toml:ro"
    restart: always

  # Reddit frontend
  libreddit:
    image: libreddit/libreddit:latest
    container_name: libreddit
    environment:
      LIBREDDIT_DEFAULT_AUTOPLAY_VIDEOS: "true"
      LIBREDDIT_DEFAULT_FRONT_PAGE: popular
      LIBREDDIT_DEFAULT_SHOW_NSFW: True
      LIBREDDIT_DEFAULT_THEME: dracula
      LIBREDDIT_DEFAULT_USE_HLS: True
    ports:
      - 8086:8080
    restart: always

  # Lingva
  lingva:
    image: thedaviddelta/lingva-translate:latest
    container_name: lingva
    environment:
      DARK_THEME: "true"
      DEFAULT_SOURCE_LANG: auto
      DEFAULT_TARGET_LANG: en
      SITE_DOMAIN: lingva.garudalinux.org
    ports:
      - 3002:3000
    restart: always

  # Teddit
  teddit:
    image: teddit/teddit:latest
    container_name: teddit
    depends_on:
      - teddit_redis
    environment:
      DOMAIN: teddit.garudalinux.org
      REDIS_HOST: teddit_redis
      THEME: dark
      TRUST_PROXY: "true"
    ports:
      - 8087:8080
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://8081/about"
        ]
      interval: 1m
      timeout: 3s
    restart: always

  teddit_redis:
    image: redis:6.2.5-alpine
    container_name: teddit_redis
    command: redis-server
    environment:
      REDIS_REPLICATION_MODE: master
    restart: always

  # Invious YouTube frontend
  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    depends_on:
      - invidious_db
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: ${INVIDIOUS_DB_PASSWORD:?err}
          host: invidious_db
          port: 5432
        check_tables: true
        default_user_preferences:
          local: true
          quality: dash
        admins: ["nico"]
        captcha_key: ${INVIDIOUS_CAPTCHA_KEY:?err}
        disable_proxy: ["livestreams","downloads"]
        domain: invidious.garudalinux.org
        external_port: 443
        hmac_key: ${INVIDIOUS_HMAC_KEY:?err}
        https_only: true
        popular_enabled: true
        statistics_enabled: true
        use_pubsub_feeds: true
        use_quic: true
    ports:
      - "10.0.5.20:3003:3000"
    healthcheck:
      test: wget -nv --tries=1 --spider http://10.0.5.20:3003/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    restart: always

  invidious_db:
    image: docker.io/library/postgres:14
    container_name: invidious_db
    volumes:
      - ./invidious/db:/var/lib/postgresql/data
      - ./invidious/config:/config/sql
      - ./invidious/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: "${INVIDIOUS_DB_PASSWORD:?err}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
        ]
    restart: always

  # Piped
  piped_backend:
    image: 1337kavin/piped:latest
    container_name: piped_backend
    depends_on:
      - piped_postgres
    volumes:
      - ./piped/config.properties:/app/config.properties:ro
    restart: always

  piped_frontend:
    image: 1337kavin/piped-frontend:latest
    container_name: piped_frontend
    entrypoint: ash -c 'sed -i s/pipedapi.kavin.rocks/piped-api.garudalinux.org/g /usr/share/nginx/html/assets/* && /docker-entrypoint.sh && nginx -g "daemon off;"'
    depends_on:
      - piped_backend
    restart: always

  piped_nginx:
    image: nginx:mainline-alpine
    container_name: piped_nginx
    depends_on:
      - piped_backend
      - piped_frontend
      - piped_proxy
    volumes:
      - ./piped/config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./piped/config/pipedapi.conf:/etc/nginx/conf.d/pipedapi.conf:ro
      - ./piped/config/pipedfrontend.conf:/etc/nginx/conf.d/pipedfrontend.conf:ro
      - ./piped/config/pipedproxy.conf:/etc/nginx/conf.d/pipedproxy.conf:ro
      - ./piped/config/ytproxy.conf:/etc/nginx/snippets/ytproxy.conf:ro
      - piped_proxy:/var/run/ytproxy
    ports:
      - "10.0.5.20:8088:80"
    restart: always

  piped_postgres:
    image: postgres:13-alpine
    container_name: piped_postgres
    volumes:
      - ./piped/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: piped
      POSTGRES_PASSWORD: "${INVIDIOUS_DB_PASSWORD:?err}"
      POSTGRES_USER: piped
    restart: always

  piped_proxy:
    image: 1337kavin/piped-proxy:latest
    container_name: piped_proxy
    environment:
      - UDS=1
    volumes:
      - piped_proxy:/app/socket
    restart: always

volumes:
  piped_proxy: null
